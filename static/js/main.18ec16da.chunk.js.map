{"version":3,"sources":["BankSelector.js","DrumPad.js","soundBanks.js","serviceWorker.js","index.js","DrumMachine.js"],"names":["BankSelector","props","id","onClick","clickLeftHandler","className","currentBank","clickRightHandler","DrumPad","audioRef","useState","animating","setAnimating","useEffect","hit","currentTime","playPromise","play","undefined","then","releasePad","drumPadID","catch","error","console","log","onMouseDown","hitPad","onAnimationEnd","letter","ref","audio","src","process","clip","soundBanks","name","samples","file","Boolean","window","location","hostname","match","ReactDOM","render","display","setDisplay","drumHits","setDrumHits","setCurrentBank","drumPadLetters","hitDrumPad","useCallback","length","updatedDrumHits","handleKeyDown","e","findIndex","x","String","fromCharCode","keyCode","document","addEventListener","removeEventListener","map","drumPad","index","key","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18ec16da.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BankSelector.scss\";\r\n\r\nexport default function BankSelector(props) {\r\n  return (\r\n    <div id=\"bank-selector\">\r\n      <div id=\"arrow-left\" onClick={() => props.clickLeftHandler()}></div>\r\n      <div className=\"display\">{props.currentBank}</div>\r\n      <div id=\"arrow-right\" onClick={() => props.clickRightHandler()}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./DrumPad.scss\";\n\nexport default function DrumPad(props) {\n  let audioRef = null;\n  const [animating, setAnimating] = useState(false);\n\n  // play audio when props.hit is set to true\n  useEffect(() => {\n    if (props.hit) {\n      // set playback position and release animation in case of multiple hits in rapid succession\n      audioRef.currentTime = 0;\n      setAnimating(false);\n\n      // audio.play() returns a Promise\n      let playPromise = audioRef.play();\n\n      if (playPromise !== undefined) {\n        playPromise\n          .then(() => {\n            // audio playback is starting, start release animation and release the pad\n            setAnimating(true);\n            props.releasePad(props.drumPadID);\n          })\n          .catch(error => {\n            console.log(\"playback failed: \" + error);\n          });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.hit, audioRef]);\n\n  const handleMouseDown = () => {\n    setAnimating(false); // stop release animation\n    props.hitPad(props.drumPadID); // mark it as hit\n  };\n\n  return (\n    <div\n      className={`drum-pad ${animating ? \"animating\" : \"\"}`}\n      onMouseDown={() => handleMouseDown()}\n      onAnimationEnd={() => setAnimating(false)}\n      id={\"drumPad\" + props.drumPadID}\n    >\n      {props.letter}\n      <audio\n        ref={audio => {\n          audioRef = audio;\n        }}\n        src={process.env.PUBLIC_URL + \"/sounds/\" + props.clip}\n        id={props.letter}\n        className=\"clip\"\n      />\n    </div>\n  );\n}\n","const soundBanks = [\r\n  {\r\n    name: \"drum set\",\r\n    samples: [\r\n      { name: \"ride edge\", file: \"power-drum-kit/RIDEEDGE.mp3\" },\r\n      { name: \"ride mid\", file: \"power-drum-kit/RIDEMID.mp3\" },\r\n      { name: \"crash\", file: \"power-drum-kit/CRASH1.mp3\" },\r\n      { name: \"tom low 1\", file: \"power-drum-kit/TOMLOW1.mp3\" },\r\n      { name: \"tom low 2\", file: \"power-drum-kit/TOMLOW2.mp3\" },\r\n      { name: \"snare\", file: \"power-drum-kit/SNARE12.mp3\" },\r\n      { name: \"bass drum\", file: \"power-drum-kit/BDRUM13.mp3\" },\r\n      { name: \"hi-hat open 2\", file: \"power-drum-kit/HHOPEN2.mp3\" },\r\n      { name: \"hi-hat closed\", file: \"power-drum-kit/HHCLOSE1.mp3\" },\r\n      { name: \"bongo 1\", file: \"power-drum-kit/BONGO1.mp3\" },\r\n      { name: \"bongo 2\", file: \"power-drum-kit/BONGO2.mp3\" },\r\n      { name: \"clap\", file: \"power-drum-kit/CLAP.mp3\" },\r\n      { name: \"ride cup\", file: \"power-drum-kit/RIDECUP.mp3\" },\r\n      { name: \"rim shot\", file: \"power-drum-kit/RIMSHOT1.mp3\" },\r\n      { name: \"tom hi 3\", file: \"power-drum-kit/TOMHI3.mp3\" },\r\n      { name: \"kick 1\", file: \"power-drum-kit/606-kick1.mp3\" },\r\n      { name: \"tom hi 1\", file: \"power-drum-kit/TOMHI1.mp3\" },\r\n      { name: \"hi-hat open 1\", file: \"power-drum-kit/HHOPEN1.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"animal sounds\",\r\n    samples: [\r\n      { name: \"wolf\", file: \"animals/112[kb]cheesy_lofi_werewolf.aif.mp3\" },\r\n      { name: \"cricket\", file: \"animals/172[kb]cricket.aif.mp3\" },\r\n      { name: \"bull dog\", file: \"animals/175[kb]bulldog.wav.mp3\" },\r\n      { name: \"tropical bird\", file: \"animals/185[kb]annoying-tropical-bird.aif.mp3\" },\r\n      { name: \"frog\", file: \"animals/22[kb]bullfrog.aif.mp3\" },\r\n      { name: \"lion\", file: \"animals/24[kb]lion-roar.wav.mp3\" },\r\n      { name: \"grizzly bear\", file: \"animals/268[kb]grizzly-bear-big-growl.wav.mp3\" },\r\n      { name: \"ducks\", file: \"animals/455[kb]duck-quacks.wav.mp3\" },\r\n      { name: \"loon\", file: \"animals/87[kb]jungle-bird.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"beat boxing\",\r\n    samples: [\r\n      { name: \"lo-fi bass drum\", file: \"beat-box/15[kb]vox_lofi_bd.aif.mp3\" },\r\n      { name: \"bass drum\", file: \"beat-box/28[kb]vox_bd.aif.mp3\" },\r\n      { name: \"hi hat\", file: \"beat-box/28[kb]vox_hi_hat.aif.mp3\" },\r\n      { name: \"scratch\", file: \"beat-box/28[kb]vox_scratch.aif.mp3\" },\r\n      { name: \"snare\", file: \"beat-box/32[kb]vox_snare.aif.mp3\" },\r\n      { name: \"break 2\", file: \"beat-box/36[kb]lofi_vox_break 2.aif.mp3\" },\r\n      { name: \"crash\", file: \"beat-box/37[kb]vox_crash.aif.mp3\" },\r\n      { name: \"phat bass drum\", file: \"beat-box/44[kb]phat_vox_bd.aif.mp3\" },\r\n      { name: \"breathy rhythm\", file: \"beat-box/50[kb]vox_breathy_rhythm.aif.mp3\" },\r\n      { name: \"break 1\", file: \"beat-box/66[kb]lofi_vox_break 1.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"cartoon effects\",\r\n    samples: [\r\n      { name: \"rude raspberry\", file: \"cartoon/108[kb]rude-raspberry.wav.mp3\" },\r\n      { name: \"sports whistle\", file: \"cartoon/156[kb]sports-whistle.wav.mp3\" },\r\n      { name: \"spin whistle\", file: \"cartoon/159[kb]cartoon-spin-whistle.wav.mp3\" },\r\n      { name: \"hit\", file: \"cartoon/241[kb]cartoon-hit.wav.mp3\" },\r\n      { name: \"car horn 2\", file: \"cartoon/271[kb]model-a-car-horn 2.wav.mp3\" },\r\n      { name: \"car zooming past\", file: \"cartoon/300[kb]car-zooms-past.wav.mp3\" },\r\n      { name: \"cork pull and pop\", file: \"cartoon/394[kb]cork-pull-and-pop.wav.mp3\" },\r\n      { name: \"belch\", file: \"cartoon/417[kb]big-ol-belch-2.wav.mp3\" },\r\n      { name: \"car horn 1\", file: \"cartoon/586[kb]model-a-car-horn.wav.mp3\" },\r\n      { name: \"cloth rip\", file: \"cartoon/92[kb]cloth-rip.wav.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"donkey kong jr\",\r\n    samples: [\r\n      { name: \"snap jaw\", file: \"donkey-kong-jr/12[kb]snapjaw.wav.mp3\" },\r\n      { name: \"roar\", file: \"donkey-kong-jr/23[kb]roar.wav.mp3\" },\r\n      { name: \"land\", file: \"donkey-kong-jr/28[kb]land.wav.mp3\" },\r\n      { name: \"jump\", file: \"donkey-kong-jr/36[kb]jump.wav.mp3\" },\r\n      { name: \"drop\", file: \"donkey-kong-jr/78[kb]drop.wav.mp3\" },\r\n      { name: \"effect 1\", file: \"donkey-kong-jr/7[kb]effect01.wav.mp3\" },\r\n      { name: \"death\", file: \"donkey-kong-jr/89[kb]death.wav.mp3\" },\r\n      { name: \"climb\", file: \"donkey-kong-jr/8[kb]climb.wav.mp3\" },\r\n      { name: \"walk\", file: \"donkey-kong-jr/8[kb]walk.wav.mp3\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default soundBanks;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DrumMachine from \"./DrumMachine\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<DrumMachine />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ReactFCCTest from \"react-fcctest\";\nimport BankSelector from \"./BankSelector\";\nimport DrumPad from \"./DrumPad\";\nimport soundBanks from \"./soundBanks\";\nimport \"./DrumMachine.scss\";\n\nexport default function DrumMachine() {\n  const [display, setDisplay] = useState(\"\");\n  const [drumHits, setDrumHits] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false\n  ]);\n  const [currentBank, setCurrentBank] = useState(0);\n  const drumPadLetters = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\n  // Updates drumPadHits to mark the drumPadID as hit (true) or released (false)\n  // Using useCallback so that it only gets updated when currentBank changes\n  const hitDrumPad = useCallback(\n    (drumPadID, hit) => {\n      // confirm the drumPadID is valid for updating state\n      if (drumPadID >= 0 && drumPadID < drumHits.length) {\n        const updatedDrumHits = [...drumHits];\n        updatedDrumHits[drumPadID] = hit;\n        setDrumHits(updatedDrumHits);\n        if (hit) {\n          setDisplay(soundBanks[currentBank].samples[drumPadID].name);\n        }\n      }\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentBank]\n  );\n\n  // cycle through the available soundBanks to the right (increment)\n  const scrollBankRight = () => {\n    setCurrentBank((currentBank + 1) % soundBanks.length);\n    setDisplay(\"\");\n  };\n\n  // cycle through the available soundBanks to the left (decrement)\n  const scrollBankLeft = () => {\n    setCurrentBank((currentBank + soundBanks.length - 1) % soundBanks.length);\n    setDisplay(\"\");\n  };\n\n  // set up event listener for keydown\n  useEffect(() => {\n    console.log(\"useEffect running\");\n    // if one of keys for a drumPad is pressed, hit the drum pad\n    const handleKeyDown = e => {\n      const drumPadID = drumPadLetters.findIndex(x => {\n        return x === String.fromCharCode(e.keyCode);\n      });\n      // if the drumPad letter was found, hit it\n      if (drumPadID >= 0) {\n        hitDrumPad(drumPadID, true);\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hitDrumPad]);\n\n  return (\n    <div>\n      <ReactFCCTest />\n      <div id=\"drum-machine\">\n        <div className=\"title\">SOUND MACHINE</div>\n        <BankSelector\n          currentBank={soundBanks[currentBank].name}\n          clickRightHandler={scrollBankRight}\n          clickLeftHandler={scrollBankLeft}\n        />\n        <div id=\"display\" className=\"display\">\n          {display}\n        </div>\n        {drumPadLetters.map((drumPad, index) => {\n          return (\n            <DrumPad\n              hit={drumHits[index]}\n              hitPad={drumPadID => hitDrumPad(drumPadID, true)}\n              releasePad={drumPadID => hitDrumPad(drumPadID, false)}\n              letter={drumPad}\n              drumPadID={index}\n              key={index}\n              clip={soundBanks[currentBank].samples[index].file}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}