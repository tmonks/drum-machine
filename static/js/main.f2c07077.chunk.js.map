{"version":3,"sources":["BankSelector.js","DrumPad.js","drumPadConfig.js","serviceWorker.js","index.js","DrumMachine.js"],"names":["BankSelector","props","id","onClick","clickLeftHandler","className","currentBank","clipName","clickRightHandler","DrumPad","audioRef","useState","animated","setLit","useEffect","hit","currentTime","playPromise","play","undefined","catch","error","console","log","onMouseDown","mouseDownHandler","drumPadID","onMouseUp","mouseUpHandler","onAnimationEnd","letter","ref","audio","src","process","clip","onEnded","soundBanks","name","samples","file","drumPadConfig","Boolean","window","location","hostname","match","ReactDOM","render","display","setDisplay","drumHits","setDrumHits","setCurrentBank","letterToDrumPad","findIndex","x","hitDrumPad","length","updatedDrumHits","handleMouseDown","handleMouseUp","handleKeyDown","e","String","fromCharCode","keyCode","handleKeyUp","document","addEventListener","removeEventListener","map","drumPad","index","key","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2c07077.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./BankSelector.scss\";\r\n\r\nexport default function BankSelector(props) {\r\n  return (\r\n    <div id=\"display-container\">\r\n      <div id=\"triangle-left\" onClick={() => props.clickLeftHandler()}></div>\r\n      <div className=\"display\">\r\n        {props.currentBank}\r\n        <br />\r\n        {props.clipName}\r\n      </div>\r\n      <div id=\"triangle-right\" onClick={() => props.clickRightHandler()}></div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n// import sound from \"./assets/test.wav\";\nimport \"./DrumPad.scss\";\n\nexport default function DrumPad(props) {\n  let audioRef = null;\n\n  const [animated, setLit] = useState(false);\n\n  useEffect(() => {\n    if (props.hit) {\n      audioRef.currentTime = 0;\n\n      // audio.play() returns a Promise  \n      let playPromise = audioRef.play();\n\n      if (playPromise !== undefined) {\n        playPromise.catch(error => {\n            console.log(\"playback failed: \" + error);\n        });\n      }\n    }\n  }, [props.hit, audioRef]);\n\n  const handleMouseDown = () => {\n    setLit(false);\n    props.mouseDownHandler(props.drumPadID);\n  };\n\n  const handleMouseUp = () => {\n    setLit(true);\n    props.mouseUpHandler(props.drumPadID);\n  };\n\n  return (\n    <div\n      className={`drum-pad ${props.hit ? \"hit\" : \"\"} ${\n        animated ? \"animated\" : \"\"\n      }`}\n      onMouseDown={() => handleMouseDown()}\n      onMouseUp={() => handleMouseUp()}\n      onAnimationEnd={() => setLit(false)}\n      id={\"drumPad\" + props.drumPadID}\n    >\n      {props.letter}\n      <audio\n        ref={audio => {\n          audioRef = audio;\n        }}\n        src={process.env.PUBLIC_URL + \"/sounds/\" + props.clip}\n        id={props.letter}\n        className=\"clip\"\n        onEnded={() => console.log(\"playback finished\")}\n      />\n    </div>\n  );\n}\n","export const bankList = [\r\n  \"drum set\",\r\n  \"animals\"\r\n  // \"donkey kong\",\r\n  // \"beat-box\",\r\n  // \"cartoon\"\r\n];\r\n\r\nexport const soundBanks = [\r\n  {\r\n    name: \"drum set\",\r\n    samples: [\r\n      { name: \"kick 1\", file: \"power-drum-kit/606-kick1.mp3\" },\r\n      { name: \"bass drum\", file: \"power-drum-kit/BDRUM13.mp3\" },\r\n      { name: \"bongo 1\", file: \"power-drum-kit/BONGO1.mp3\" },\r\n      { name: \"bongo 2\", file: \"power-drum-kit/BONGO2.mp3\" },\r\n      { name: \"clap\", file: \"power-drum-kit/CLAP.mp3\" },\r\n      { name: \"crash\", file: \"power-drum-kit/CRASH1.mp3\" },\r\n      { name: \"hi-hat closed\", file: \"power-drum-kit/HHCLOSE1.mp3\" },\r\n      { name: \"hi-hat open 1\", file: \"power-drum-kit/HHOPEN1.mp3\" },\r\n      { name: \"hi-hat open 2\", file: \"power-drum-kit/HHOPEN2.mp3\" },\r\n      { name: \"ride cup\", file: \"power-drum-kit/RIDECUP.mp3\" },\r\n      { name: \"ride edge\", file: \"power-drum-kit/RIDEEDGE.mp3\" },\r\n      { name: \"ride mid\", file: \"power-drum-kit/RIDEMID.mp3\" },\r\n      { name: \"rim shot\", file: \"power-drum-kit/RIMSHOT1.mp3\" },\r\n      { name: \"snare\", file: \"power-drum-kit/SNARE12.mp3\" },\r\n      { name: \"tom hi 1\", file: \"power-drum-kit/TOMHI1.mp3\" },\r\n      { name: \"tom hi 3\", file: \"power-drum-kit/TOMHI3.mp3\" },\r\n      { name: \"tom low 1\", file: \"power-drum-kit/TOMLOW1.mp3\" },\r\n      { name: \"tom low 2\", file: \"power-drum-kit/TOMLOW2.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    name: \"animal sounds\",\r\n    samples: [\r\n      { name: \"wolf\", file: \"animals/112[kb]cheesy_lofi_werewolf.aif.mp3\" },\r\n      { name: \"cricket\", file: \"animals/172[kb]cricket.aif.mp3\" },\r\n      { name: \"bull dog\", file: \"animals/175[kb]bulldog.wav.mp3\" },\r\n      { name: \"tropical bird\", file: \"animals/185[kb]annoying-tropical-bird.aif.mp3\" },\r\n      { name: \"frog\", file: \"animals/22[kb]bullfrog.aif.mp3\" },\r\n      { name: \"lion\", file: \"animals/24[kb]lion-roar.wav.mp3\" },\r\n      { name: \"grizzly bear\", file: \"animals/268[kb]grizzly-bear-big-growl.wav.mp3\" },\r\n      { name: \"ducks\", file: \"animals/455[kb]duck-quacks.wav.mp3\" },\r\n      { name: \"loon\", file: \"animals/87[kb]jungle-bird.aif.mp3\" },\r\n    ]\r\n  },\r\n  {\r\n      name: \"beat boxing\",\r\n      samples: [\r\n        { name: \"lo-fi bass drum\", file: \"beat-box/15[kb]vox_lofi_bd.aif.mp3\" },\r\n        { name: \"bass drum\", file: \"beat-box/28[kb]vox_bd.aif.mp3\" },\r\n        { name: \"hi hat\", file: \"beat-box/28[kb]vox_hi_hat.aif.mp3\" },\r\n        { name: \"scratch\", file: \"beat-box/28[kb]vox_scratch.aif.mp3\" },\r\n        { name: \"snare\", file: \"beat-box/32[kb]vox_snare.aif.mp3\" },\r\n        { name: \"break 2\", file: \"beat-box/36[kb]lofi_vox_break 2.aif.mp3\" },\r\n        { name: \"crash\", file: \"beat-box/37[kb]vox_crash.aif.mp3\" },\r\n        { name: \"phat bass drum\", file: \"beat-box/44[kb]phat_vox_bd.aif.mp3\" },\r\n        { name: \"breathy rhythm\", file: \"beat-box/50[kb]vox_breathy_rhythm.aif.mp3\" },\r\n        { name: \"break 1\", file: \"beat-box/66[kb]lofi_vox_break 1.aif.mp3\" },\r\n      ]\r\n  },\r\n  {\r\n    name: \"cartoon effects\",\r\n    samples: [\r\n      { name: \"rude raspberry\", file: \"cartoon/108[kb]rude-raspberry.wav.mp3\" },\r\n      { name: \"sports whistle\", file: \"cartoon/156[kb]sports-whistle.wav.mp3\" },\r\n      { name: \"spin whistle\", file: \"cartoon/159[kb]cartoon-spin-whistle.wav.mp3\" },\r\n      { name: \"hit\", file: \"cartoon/241[kb]cartoon-hit.wav.mp3\" },\r\n      { name: \"car horn 2\", file: \"cartoon/271[kb]model-a-car-horn 2.wav.mp3\" },\r\n      { name: \"car zooming past\", file: \"cartoon/300[kb]car-zooms-past.wav.mp3\" },\r\n      { name: \"cork pull and pop\", file: \"cartoon/394[kb]cork-pull-and-pop.wav.mp3\" },\r\n      { name: \"belch\", file: \"cartoon/417[kb]big-ol-belch-2.wav.mp3\" },\r\n      { name: \"car horn 1\", file: \"cartoon/586[kb]model-a-car-horn.wav.mp3\" },\r\n      { name: \"cloth rip\", file: \"cartoon/92[kb]cloth-rip.wav.mp3\" },\r\n    ] \r\n  },\r\n  {\r\n    name: \"donkey kong jr\",\r\n    samples: [\r\n      { name: \"snap jaw\", file: \"donkey-kong-jr/12[kb]snapjaw.wav.mp3\" },\r\n      { name: \"roar\", file: \"donkey-kong-jr/23[kb]roar.wav.mp3\" },\r\n      { name: \"land\", file: \"donkey-kong-jr/28[kb]land.wav.mp3\" },\r\n      { name: \"jump\", file: \"donkey-kong-jr/36[kb]jump.wav.mp3\" },\r\n      { name: \"drop\", file: \"donkey-kong-jr/78[kb]drop.wav.mp3\" },\r\n      { name: \"effect 1\", file: \"donkey-kong-jr/7[kb]effect01.wav.mp3\" },\r\n      { name: \"death\", file: \"donkey-kong-jr/89[kb]death.wav.mp3\" },\r\n      { name: \"climb\", file: \"donkey-kong-jr/8[kb]climb.wav.mp3\" },\r\n      { name: \"walk\", file: \"donkey-kong-jr/8[kb]walk.wav.mp3\" },\r\n    ]\r\n  }\r\n]\r\n  \r\n  \r\n\r\nconst drumPadConfig = [\r\n  {\r\n    id: \"Q\",\r\n    samples: [\r\n      {\r\n        name: \"tom tom\",\r\n        file: \"power-drum-kit/TOMLOW2.mp3\"\r\n      }, \r\n{ name: \"wolf\", file: \"animals/112[kb]cheesy_lofi_werewolf.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"W\",\r\n    samples: [\r\n      {\r\n        name: \"rim shot\",\r\n        file: \"power-drum-kit/RIMSHOT1.mp3\"\r\n      }, \r\n{ name: \"cricket\", file: \"animals/172[kb]cricket.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"E\",\r\n    samples: [\r\n      {\r\n        name: \"clap\",\r\n        file: \"power-drum-kit/CLAP.mp3\"\r\n      }, \r\n{ name: \"bull dog\", file: \"animals/175[kb]bulldog.wav.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"A\",\r\n    samples: [\r\n      {\r\n        name: \"crash cymbal\",\r\n        file: \"power-drum-kit/CRASH1.mp3\"\r\n      },\r\n{ name: \"tropical bird\", file: \"animals/185[kb]annoying-tropical-bird.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"S\",\r\n    samples: [\r\n      {\r\n        name: \"ride cymbal\",\r\n        file: \"power-drum-kit/RIDEMID.mp3\"\r\n      }, \r\n{ name: \"frog\", file: \"animals/22[kb]bullfrog.aif.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"D\",\r\n    samples: [\r\n      {\r\n        name: \"hi-hat open\",\r\n        file: \"power-drum-kit/HHOPEN2.mp3\"\r\n      }, \r\n{ name: \"lion\", file: \"animals/24[kb]lion-roar.wav.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"Z\",\r\n    samples: [\r\n      {\r\n        name: \"snare\",\r\n        file: \"power-drum-kit/SNARE12.mp3\"\r\n      },\r\n{ name: \"grizzly bear\", file: \"animals/268[kb]grizzly-bear-big-growl.wav.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"X\",\r\n    samples: [\r\n      {\r\n        name: \"bass drum\",\r\n        file: \"power-drum-kit/BDRUM13.mp3\"\r\n      },\r\n{ name: \"ducks\", file: \"animals/455[kb]duck-quacks.wav.mp3\" }\r\n    ]\r\n  },\r\n  {\r\n    id: \"C\",\r\n    samples: [\r\n      {\r\n        name: \"hi-hat closed\",\r\n        file: \"power-drum-kit/HHCLOSE1.mp3\"\r\n      }, \r\n{ name: \"jungle bird\", file: \"animals/87[kb]jungle-bird.aif.mp3\" }\r\n    ]\r\n  }\r\n];\r\n\r\nexport default drumPadConfig;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport DrumMachine from \"./DrumMachine\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<DrumMachine />, document.getElementById(\"root\"));\nserviceWorker.unregister();\n","import React, { useState, useEffect } from \"react\";\nimport ReactFCCTest from \"react-fcctest\";\nimport BankSelector from \"./BankSelector\";\nimport DrumPad from \"./DrumPad\";\nimport drumPadConfig, { soundBanks } from \"./drumPadConfig\";\nimport \"./DrumMachine.scss\";\n\nexport default function DrumMachine() {\n  const [display, setDisplay] = useState(\"\");\n  const [drumHits, setDrumHits] = useState([\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false,\n    false\n  ]);\n  const [currentBank, setCurrentBank] = useState(0);\n  const drumPadLetters = [\"Q\", \"W\", \"E\", \"A\", \"S\", \"D\", \"Z\", \"X\", \"C\"];\n\n  // given a letter, find the drumPadID (index) of the drumPad\n  const letterToDrumPad = letter => {\n    return drumPadConfig.findIndex(x => {\n      return x.id === letter;\n    });\n  };\n\n  const hitDrumPad = (drumPadID, hit) => {\n    // confirm the drumPadID is valid for updating state\n    if (drumPadID >= 0 && drumPadID < drumHits.length) {\n      const updatedDrumHits = [...drumHits];\n      updatedDrumHits[drumPadID] = hit;\n      setDrumHits(updatedDrumHits);\n      setDisplay(soundBanks[currentBank].samples[drumPadID].name);\n      console.log(\"setting display to \" + display);\n    }\n  };\n\n  // if a drumPad is clicked, mark it as hit\n  const handleMouseDown = drumPadID => {\n    hitDrumPad(drumPadID, true);\n  };\n\n  // if a drumPad is clicked, mark it as not hit\n  const handleMouseUp = drumPadID => {\n    hitDrumPad(drumPadID, false);\n  };\n\n  const handleClickRight = () => {\n    setCurrentBank((currentBank + 1) % soundBanks.length);\n    setDisplay(\"\");\n  };\n\n  const handleClickLeft = () => {\n    setCurrentBank((currentBank + soundBanks.length - 1) % soundBanks.length);\n    setDisplay(\"\");\n  };\n\n  // set up event listeners for keypresses\n  useEffect(() => {\n    // if one of keys for a drumPad is pressed, hit the drum pad\n    const handleKeyDown = e => {\n      const drumPadID = letterToDrumPad(String.fromCharCode(e.keyCode));\n      // confirm the drumPad was found\n      if (drumPadID >= 0) {\n        hitDrumPad(drumPadID, true);\n      }\n    };\n\n    // if one of the keys for a drumPad is released, release the drum pad\n    const handleKeyUp = e => {\n      const drumPadID = letterToDrumPad(String.fromCharCode(e.keyCode));\n      // confirm the drumPad was found\n      if (drumPadID >= 0) {\n        hitDrumPad(drumPadID, false);\n      }\n    };\n\n    console.log(\"Adding event listeners...\");\n    document.addEventListener(\"keydown\", handleKeyDown, false);\n    document.addEventListener(\"keyup\", handleKeyUp, false);\n\n    return () => {\n      console.log(\"Cleaning up...\");\n      document.removeEventListener(\"keydown\", handleKeyDown, false);\n      document.removeEventListener(\"keyup\", handleKeyUp, false);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      <ReactFCCTest />\n      <div id=\"drum-machine\">\n        <div className=\"title\">SOUND MACHINE</div>\n        <BankSelector\n          clipName=\"\"\n          currentBank={soundBanks[currentBank].name}\n          clickRightHandler={handleClickRight}\n          clickLeftHandler={handleClickLeft}\n        />\n        <div id=\"display\" className=\"display\">\n          {display}\n        </div>\n        {drumPadLetters.map((drumPad, index) => {\n          return (\n            <DrumPad\n              hit={drumHits[index]}\n              mouseDownHandler={handleMouseDown}\n              mouseUpHandler={handleMouseUp}\n              letter={drumPad}\n              drumPadID={index}\n              key={index}\n              clip={soundBanks[currentBank].samples[index].file}\n            />\n          );\n        })}\n        {/* {drumPadConfig.map((drumPad, index) => {\n          return (\n            <DrumPad\n              hit={drumHits[index]}\n              mouseDownHandler={handleMouseDown}\n              mouseUpHandler={handleMouseUp}\n              letter={drumPad.id}\n              drumPadID={index}\n              key={index}\n              clip={drumPad.samples[currentBank].file}\n            />\n          );\n        })} */}\n \n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}